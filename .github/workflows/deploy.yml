name: website lint & run tests & deploy
on:
  - push:
  - pull_request:

jobs:
  upload-image:
    name: upload docker image to cloud
    if: github.ref == 'refs/heads/master'
    strategy:
      matrix:
        go-version: [1.14.x, 1.15.x]
        os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - uses: actions/cache@v2
          with:
            path: ~/go/bin/bindata
            key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            restore-keys: |
              ${{ runner.os }}-go-

      - name: install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
          - name: checkout code
            uses: actions/checkout@v2

          - name: install bindata
            run: go get -u github.com/go-bindata/go-bindata/...

          - name: build schema source file
            run: go-bindata -o=assets/asset.go -ignore=".DS_Store|README.md|schema.go" -pkg=asset schema/...

          - name: build app
            run: go build -o build/archie ./main.go

      - name: docker login
        run: docker login --username=${{ secrets.TENCENT_YUN_USERNAME }} --password ${{ secrets.TENCENT_YUN_PASSWORD }}

      - name: build docker image
        run: docker build -t archie .

      - name: tag the image & push the image to cloud
        run: |
          docker tag $(docker images -q --filter reference=wizard_website) ${{ secrets.WEBSITE_IMAGE_NAME }}
          docker push ${{ secrets.WEBSITE_IMAGE_NAME }}

    pull-image:
      needs: [upload-image]
      name: pull image from cloud
      runs-on: ubuntu-latest
      steps:
        - name: deploy website
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.DEPLOY_SERVER_HOST }}
            username: ${{ secrets.DEPLOY_SERVER_USER }}
            password: ${{ secrets.DEPLOY_SERVER_PASSWORD }}
            port: ${{ secrets.DEPLOY_SERVER_SSH_PORT }}
            script: |
              docker network create wizardoc_net
              docker login --username=${{ secrets.TENCENT_YUN_USERNAME }} --password ${{ secrets.TENCENT_YUN_PASSWORD }}
              docker stop ${{ secrets.WEBSITE_CONTAINER_NAME }}
              docker rm -f ${{ secrets.WEBSITE_CONTAINER_NAME }}
              docker rmi -f ${{ secrets.WEBSITE_IMAGE_NAME }}
              docker pull ${{ secrets.WEBSITE_IMAGE_NAME }}
              docker run --name ${{ secrets.WEBSITE_CONTAINER_NAME }} --network wizardoc_net -d -p 8060:80 ${{ secrets.WEBSITE_IMAGE_NAME }}

